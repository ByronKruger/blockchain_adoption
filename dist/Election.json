{
  "contractName": "Election",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "questions",
      "outputs": [
        {
          "name": "id",
          "type": "uint256"
        },
        {
          "name": "question",
          "type": "string"
        },
        {
          "name": "answer",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x31b1b978"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "questionAndAnswerCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x6e587ec0"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getQuestionsCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xc2e112d2"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        }
      ],
      "name": "grantStudent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x313efd2f"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "answer",
          "type": "bytes"
        },
        {
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "answerQ",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xfe248cbe"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "q",
          "type": "string"
        },
        {
          "name": "a",
          "type": "bytes32"
        }
      ],
      "name": "addQuestion",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x9d4b8102"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "selfdestruct",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x679d38e0"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063313efd2f1461008557806331b1b978146100d6578063679d38e0146101985780636e587ec0146101af5780639d4b8102146101da578063c2e112d2146102ac578063fe248cbe146102d7575b005b34801561009157600080fd5b506100d4600480360360208110156100a857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103a9565b005b3480156100e257600080fd5b5061010f600480360360208110156100f957600080fd5b81019080803590602001909291905050506104f2565b6040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561015b578082015181840152602081019050610140565b50505050905090810190601f1680156101885780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156101a457600080fd5b506101ad6105b4565b005b3480156101bb57600080fd5b506101c46106a9565b6040518082815260200191505060405180910390f35b3480156101e657600080fd5b506102aa600480360360408110156101fd57600080fd5b810190808035906020019064010000000081111561021a57600080fd5b82018360208201111561022c57600080fd5b8035906020019184600183028401116401000000008311171561024e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291905050506106af565b005b3480156102b857600080fd5b506102c161081d565b6040518082815260200191505060405180910390f35b3480156102e357600080fd5b506103a7600480360360408110156102fa57600080fd5b810190808035906020019064010000000081111561031757600080fd5b82018360208201111561032957600080fd5b8035906020019184600183028401116401000000008311171561034b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050610826565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610494576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001807f4f6e6c792043727970746f207072696e6369706c65206d6179206772616e742081526020017f61207573657220612073747564656e742e00000000000000000000000000000081525060400191505060405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555050565b6001602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105a45780601f10610579576101008083540402835291602001916105a4565b820191906000526020600020905b81548152906001019060200180831161058757829003601f168201915b5050505050908060020154905083565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561069f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001807f4f6e6c792043727970746f207072696e6369706c65206d61792064657374726f81526020017f79207468652043727970746f205363686f6f6c2e00000000000000000000000081525060400191505060405180910390fd5b6106a76105b4565b565b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561079a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f4f6e6c792043727970746f207072696e6369706c65206d61792061646420717581526020017f657374696f6e732e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6107a2610bed565b60606040519081016040528060008081548092919060010191905055815260200184815260200183815250905080600160008054815260200190815260200160002060008201518160000155602082015181600101908051906020019061080a929190610c12565b5060408201518160020155905050505050565b60008054905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151515610912576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603e8152602001807f5072696e6369706c65206973206e6f7420616c6c6f77656420746f20616e737781526020017f6572207175657374696f6e732c207468657927726520657870657274732e000081525060400191505060405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615156109fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260408152602001807f4f74686572207573657273206d6179206e6f7420616e7377657220717565737481526020017f696f6e732c2074686579206172652070726f6261626c7920657870657274732e81525060400191505060405180910390fd5b610a04610bed565b600160008381526020019081526020016000206060604051908101604052908160008201548152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ac65780601f10610a9b57610100808354040283529160200191610ac6565b820191906000526020600020905b815481529060010190602001808311610aa957829003601f168201915b50505050508152602001600282015481525050905060006002846040518082805190602001908083835b602083101515610b155780518252602082019150602081019050602083039250610af0565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015610b57573d6000803e3d6000fd5b5050506040513d6020811015610b6c57600080fd5b810190808051906020019092919050505090508160400151811415610bdf573373ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a76400009081150290604051600060405180830381858888f19350505050158015610bd9573d6000803e3d6000fd5b50610be6565b5050610be9565b50505b5050565b6060604051908101604052806000815260200160608152602001600080191681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c5357805160ff1916838001178555610c81565b82800160010185558215610c81579182015b82811115610c80578251825591602001919060010190610c65565b5b509050610c8e9190610c92565b5090565b610cb491905b80821115610cb0576000816000905550600101610c98565b5090565b9056fea165627a7a72305820f360b11bc341d44dd8f31738f9fe76218f6a516103a39ab40425adad80a2d0260029",
  "sourceMap": "25:3785:0:-;;;2585:1019;8:9:-1;5:2;;;30:1;27;20:12;5:2;2585:1019:0;2628:10;2616:9;;:22;;;;;;;;;;;;;;;;;;2648:125;;;;;;;;;;;;;;;;;;;;;;;;2706:66;2648:125;;:11;;;:125;;;:::i;:::-;2783:171;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2887:66;2783:171;;:11;;;:171;;;:::i;:::-;2964:147;;;;;;;;;;;;;;;;;;;;;;;;3044:66;2964:147;;:11;;;:147;;;:::i;:::-;3121:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3209:66;3121:155;;:11;;;:155;;;:::i;:::-;3286:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3378:66;3286:159;;:11;;;:159;;;:::i;:::-;3455:142;;;;;;;;;;;;;;;;;;;;;;;;3530:66;3455:142;;:11;;;:142;;;:::i;:::-;25:3785;;2013:404;2164:9;;;;;;;;;;;2150:23;;:10;:23;;;2129:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2249:44;;:::i;:::-;2296:49;;;;;;;;;2314:22;;:24;;;;;;;;;;;;2296:49;;;;2340:1;2296:49;;;;2343:1;2296:49;;;2249:96;;2391:19;2355:9;:33;2365:22;;2355:33;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2013:404;;;:::o;25:3785::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "25:3785:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;860:303;;8:9:-1;5:2;;;30:1;27;20:12;5:2;860:303:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;860:303:0;;;;;;;;;;;;;;;;;;;;;;291:52;;8:9:-1;5:2;;;30:1;27;20:12;5:2;291:52:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;291:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;291:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3614:194;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3614:194:0;;;;;;199:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;199:34:0;;;;;;;;;;;;;;;;;;;;;;;2013:404;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2013:404:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2013:404:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2013:404:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2013:404:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2013:404:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2013:404:0;;;;;;;;;;;;;;;;;;;;;;;;;;;676:96;;8:9:-1;5:2;;;30:1;27;20:12;5:2;676:96:0;;;;;;;;;;;;;;;;;;;;;;;1181:782;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1181:782:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1181:782:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1181:782:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1181:782:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1181:782:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1181:782:0;;;;;;;;;;;;;;;;;;;;;;;;;;;860:303;1029:9;;;;;;;;;;;1015:23;;:10;:23;;;994:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1152:4;1132:5;:9;1138:2;1132:9;;;;;;;;;;;;;;;:17;;;:24;;;;;;;;;;;;;;;;;;860:303;:::o;291:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3614:194::-;3690:9;;;;;;;;;;;3676:23;;:10;:23;;;3655:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3787:14;:12;:14::i;:::-;3614:194::o;199:34::-;;;;:::o;2013:404::-;2164:9;;;;;;;;;;;2150:23;;:10;:23;;;2129:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2249:44;;:::i;:::-;2296:49;;;;;;;;;2314:22;;:24;;;;;;;;;;;;2296:49;;;;2340:1;2296:49;;;;2343:1;2296:49;;;2249:96;;2391:19;2355:9;:33;2365:22;;2355:33;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2013:404;;;:::o;676:96::-;721:4;743:22;;736:29;;676:96;:::o;1181:782::-;1337:9;;;;;;;;;;;1323:23;;:10;:23;;;;1302:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1534:5;:17;1540:10;1534:17;;;;;;;;;;;;;;;:25;;;;;;;;;;;;1513:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1668:44;;:::i;:::-;1715:9;:13;1725:2;1715:13;;;;;;;;;;;1668:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1747:22;1772:14;1779:6;1772:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1772:14:0;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1772:14:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1772:14:0;;;;;;;;;;;;;;;;1747:39;;1829:19;:26;;;1809:14;1808:48;1805:152;;;1871:10;:19;;:40;1891:19;1871:40;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1871:40:0;1805:152;;;1940:7;;;;1805:152;1181:782;;;;;:::o;25:3785::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\ncontract Election {\n    \n    struct questionAndAnswer {\n        uint id;\n        string question;\n        bytes32 answer;\n    }\n    \n    // Store questionAndAnswer count\n    uint public questionAndAnswerCount;\n    \n    // the set of questions and their answers.\n    mapping (uint => questionAndAnswer) public questions;\n    \n    // the set of users (not necessarily students.)\n    mapping (address => User) users;\n     \n    // address of the owner/principle with special rights (granting user a student.)\n    address principle; \n    \n    // \n    struct User {\n        bool student;\n        // int correct;\n        // int totalAsnwered;\n    }\n    \n    function getQuestionsCount() public returns (uint){\n        return questionAndAnswerCount;\n    }\n    \n    //grant an address to be a student (We don't want experts to take quizes)\n    function grantStudent(address to) public {\n        // make sure only the principle is allowed to grant a user to be a student\n        require(\n            msg.sender == principle,\n            \"Only Crypto principle may grant a user a student.\"\n        );\n        \n        users[to].student = true;\n    }\n    \n    // \n    function answerQ(bytes memory answer, uint id) public {\n        // principle is not allowed to answer questions.\n        require(\n            msg.sender != principle,\n            \"Principle is not allowed to answer questions, they're experts.\"    \n        );\n        \n        // user must be a granted student (no experts).\n        require(\n            users[msg.sender].student,\n            \"Other users may not answer questions, they are probably experts.\"\n        );\n        \n        questionAndAnswer memory myQuestionAndAnswer = questions[id];\n        \n        bytes32 studentsAnswer = sha256(answer);\n        \n        if((studentsAnswer) == (myQuestionAndAnswer.answer)){\n            msg.sender.transfer(1000000000000000000);\n        }else{\n            return;\n        }\n    }\n    \n    // a questionAndAnswer to questions\n    function addQuestion(string memory q, bytes32 a) public{\n        // only crypto principle may add questions\n        require(\n            msg.sender == principle,\n            \"Only Crypto principle may add questions.\"\n        );\n        questionAndAnswer memory myQuestionAndAnswer = questionAndAnswer(questionAndAnswerCount++, q, a);\n        questions[questionAndAnswerCount] = myQuestionAndAnswer;\n    }\n    \n    // Accept any incoming amount to fund the contract.\n    function () external payable {}\n\n    // create contract, make sender the \"owner\" of the contract.\n    constructor() public {\n        principle = msg.sender;\n        addQuestion(\"What consensus algorithm does Bitcoin use?\", 0x73B01E93631118159B40599836BB23022CA7AD00C1203D18984CD982654E7F40);\n        addQuestion(\"Normal currencies follow an inflationary price model, Bitcoin follows a ___ price model?\", 0x0069A1598BE3E8A3F4EB13B8B3ABEB4F62934EECF21E06E4BD7DD0E954C8F436);\n        addQuestion(\"A blockchain that is strictly private, is just a glorified what?\", 0x3549B0028B75D981CDDA2E573E9CB49DEDC200185876DF299F912B79F69DABD8);\n        addQuestion(\"What is the collection of all Ethereum nodes also known as? A world ___?\", 0xAA97302150FCE811425CD84537028A5AFBE37E3F1362AD45A51D467E17AFDC9C);\n        addQuestion(\"What process is impossible to conduct on the Bitcoin blockchain, double ___?\", 0x262CD7E8D3156B5B97113A373C84D53289DB4530E285D5C8DB3E9874ABC891A9);\n        addQuestion(\"What part of a cryptocurrency wallet must you never expose?\", 0xD7CD482CB958EF235F5D26E852472BA1EE5309EAB18E3C6712181A7BFAE80000);\n    }\n    \n    function selfdestruct() public {\n        require(\n            msg.sender == principle,\n            \"Only Crypto principle may destroy the Crypto School.\"\n        );\n        selfdestruct();\n    }\n}",
  "sourcePath": "/home/paul/code/cryptocademy/election_react/contracts/Election.sol",
  "ast": {
    "absolutePath": "/home/paul/code/cryptocademy/election_react/contracts/Election.sol",
    "exportedSymbols": {
      "Election": [
        197
      ]
    },
    "id": 198,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 197,
        "linearizedBaseContracts": [
          197
        ],
        "name": "Election",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Election.questionAndAnswer",
            "id": 8,
            "members": [
              {
                "constant": false,
                "id": 3,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "89:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "89:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "name": "question",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "106:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "106:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "name": "answer",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "131:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 6,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "131:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "questionAndAnswer",
            "nodeType": "StructDefinition",
            "scope": 197,
            "src": "54:98:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10,
            "name": "questionAndAnswerCount",
            "nodeType": "VariableDeclaration",
            "scope": 197,
            "src": "199:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "199:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 14,
            "name": "questions",
            "nodeType": "VariableDeclaration",
            "scope": 197,
            "src": "291:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_questionAndAnswer_$8_storage_$",
              "typeString": "mapping(uint256 => struct Election.questionAndAnswer)"
            },
            "typeName": {
              "id": 13,
              "keyType": {
                "id": 11,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "300:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "291:35:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_questionAndAnswer_$8_storage_$",
                "typeString": "mapping(uint256 => struct Election.questionAndAnswer)"
              },
              "valueType": {
                "contractScope": null,
                "id": 12,
                "name": "questionAndAnswer",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 8,
                "src": "308:17:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_questionAndAnswer_$8_storage_ptr",
                  "typeString": "struct Election.questionAndAnswer"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 18,
            "name": "users",
            "nodeType": "VariableDeclaration",
            "scope": 197,
            "src": "406:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
              "typeString": "mapping(address => struct Election.User)"
            },
            "typeName": {
              "id": 17,
              "keyType": {
                "id": 15,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "415:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "406:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                "typeString": "mapping(address => struct Election.User)"
              },
              "valueType": {
                "contractScope": null,
                "id": 16,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 23,
                "src": "426:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$23_storage_ptr",
                  "typeString": "struct Election.User"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 20,
            "name": "principle",
            "nodeType": "VariableDeclaration",
            "scope": 197,
            "src": "534:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "534:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "Election.User",
            "id": 23,
            "members": [
              {
                "constant": false,
                "id": 22,
                "name": "student",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "593:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 21,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "593:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nodeType": "StructDefinition",
            "scope": 197,
            "src": "571:95:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 30,
              "nodeType": "Block",
              "src": "726:46:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 28,
                    "name": "questionAndAnswerCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10,
                    "src": "743:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 27,
                  "id": 29,
                  "nodeType": "Return",
                  "src": "736:29:0"
                }
              ]
            },
            "documentation": null,
            "id": 31,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getQuestionsCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "702:2:0"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "721:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "720:6:0"
            },
            "scope": 197,
            "src": "676:96:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 51,
              "nodeType": "Block",
              "src": "901:262:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 40,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 37,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "1015:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 38,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1015:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 39,
                          "name": "principle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "1029:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1015:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792043727970746f207072696e6369706c65206d6179206772616e742061207573657220612073747564656e742e",
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1052:51:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_418812ccf8ea672c6bc5f8dad45289a4dccdb05eac03be58e884ce4983292ff2",
                          "typeString": "literal_string \"Only Crypto principle may grant a user a student.\""
                        },
                        "value": "Only Crypto principle may grant a user a student."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_418812ccf8ea672c6bc5f8dad45289a4dccdb05eac03be58e884ce4983292ff2",
                          "typeString": "literal_string \"Only Crypto principle may grant a user a student.\""
                        }
                      ],
                      "id": 36,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        272,
                        273
                      ],
                      "referencedDeclaration": 273,
                      "src": "994:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "994:119:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "994:119:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 44,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "1132:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                            "typeString": "mapping(address => struct Election.User storage ref)"
                          }
                        },
                        "id": 46,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 45,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "1138:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1132:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$23_storage",
                          "typeString": "struct Election.User storage ref"
                        }
                      },
                      "id": 47,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "student",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "1132:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1152:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1132:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "1132:24:0"
                }
              ]
            },
            "documentation": null,
            "id": 52,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "grantStudent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "882:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "882:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "881:12:0"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "901:0:0"
            },
            "scope": 197,
            "src": "860:303:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "1235:728:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 60,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "1323:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1323:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 62,
                          "name": "principle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "1337:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1323:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5072696e6369706c65206973206e6f7420616c6c6f77656420746f20616e73776572207175657374696f6e732c207468657927726520657870657274732e",
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1360:64:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7cec965cea7c424309fbd0b2b3b7db5a2e67a549e9d27d545dbc3abb9964c207",
                          "typeString": "literal_string \"Principle is not allowed to answer questions, they're experts.\""
                        },
                        "value": "Principle is not allowed to answer questions, they're experts."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7cec965cea7c424309fbd0b2b3b7db5a2e67a549e9d27d545dbc3abb9964c207",
                          "typeString": "literal_string \"Principle is not allowed to answer questions, they're experts.\""
                        }
                      ],
                      "id": 59,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        272,
                        273
                      ],
                      "referencedDeclaration": 273,
                      "src": "1302:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1302:136:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1302:136:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 68,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "1534:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                              "typeString": "mapping(address => struct Election.User storage ref)"
                            }
                          },
                          "id": 71,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 69,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 269,
                              "src": "1540:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 70,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1540:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1534:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$23_storage",
                            "typeString": "struct Election.User storage ref"
                          }
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "student",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22,
                        "src": "1534:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f74686572207573657273206d6179206e6f7420616e73776572207175657374696f6e732c2074686579206172652070726f6261626c7920657870657274732e",
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1573:66:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_919e5d7b7225745c62f1ca55cc5255c4251a8d21012307b2939373d4fb0716dd",
                          "typeString": "literal_string \"Other users may not answer questions, they are probably experts.\""
                        },
                        "value": "Other users may not answer questions, they are probably experts."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_919e5d7b7225745c62f1ca55cc5255c4251a8d21012307b2939373d4fb0716dd",
                          "typeString": "literal_string \"Other users may not answer questions, they are probably experts.\""
                        }
                      ],
                      "id": 67,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        272,
                        273
                      ],
                      "referencedDeclaration": 273,
                      "src": "1513:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1513:136:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "1513:136:0"
                },
                {
                  "assignments": [
                    77
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77,
                      "name": "myQuestionAndAnswer",
                      "nodeType": "VariableDeclaration",
                      "scope": 106,
                      "src": "1668:44:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_questionAndAnswer_$8_memory_ptr",
                        "typeString": "struct Election.questionAndAnswer"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 76,
                        "name": "questionAndAnswer",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 8,
                        "src": "1668:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_questionAndAnswer_$8_storage_ptr",
                          "typeString": "struct Election.questionAndAnswer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 81,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 78,
                      "name": "questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1715:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_questionAndAnswer_$8_storage_$",
                        "typeString": "mapping(uint256 => struct Election.questionAndAnswer storage ref)"
                      }
                    },
                    "id": 80,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "1725:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1715:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_questionAndAnswer_$8_storage",
                      "typeString": "struct Election.questionAndAnswer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1668:60:0"
                },
                {
                  "assignments": [
                    83
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83,
                      "name": "studentsAnswer",
                      "nodeType": "VariableDeclaration",
                      "scope": 106,
                      "src": "1747:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 82,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1747:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 87,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 85,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1779:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 84,
                      "name": "sha256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "1772:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1772:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1747:39:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 88,
                          "name": "studentsAnswer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83,
                          "src": "1809:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 89,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1808:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 90,
                            "name": "myQuestionAndAnswer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "1829:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_questionAndAnswer_$8_memory_ptr",
                              "typeString": "struct Election.questionAndAnswer memory"
                            }
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "answer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "1829:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 92,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1828:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1808:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 104,
                    "nodeType": "Block",
                    "src": "1926:31:0",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 58,
                        "id": 103,
                        "nodeType": "Return",
                        "src": "1940:7:0"
                      }
                    ]
                  },
                  "id": 105,
                  "nodeType": "IfStatement",
                  "src": "1805:152:0",
                  "trueBody": {
                    "id": 102,
                    "nodeType": "Block",
                    "src": "1857:65:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31303030303030303030303030303030303030",
                              "id": 99,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1891:19:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1000000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 94,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 269,
                                "src": "1871:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 97,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1871:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 98,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1871:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1871:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 101,
                        "nodeType": "ExpressionStatement",
                        "src": "1871:40:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "answerQ",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "name": "answer",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "1198:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "1219:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1197:30:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1235:0:0"
            },
            "scope": 197,
            "src": "1181:782:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "2068:349:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 115,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "2150:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2150:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 117,
                          "name": "principle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "2164:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2150:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792043727970746f207072696e6369706c65206d617920616464207175657374696f6e732e",
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2187:42:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4baf7e441f4c854651ef6a7e20b36e69f5137f34c46927afa05aec090648c2cb",
                          "typeString": "literal_string \"Only Crypto principle may add questions.\""
                        },
                        "value": "Only Crypto principle may add questions."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4baf7e441f4c854651ef6a7e20b36e69f5137f34c46927afa05aec090648c2cb",
                          "typeString": "literal_string \"Only Crypto principle may add questions.\""
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        272,
                        273
                      ],
                      "referencedDeclaration": 273,
                      "src": "2129:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2129:110:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "2129:110:0"
                },
                {
                  "assignments": [
                    123
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 123,
                      "name": "myQuestionAndAnswer",
                      "nodeType": "VariableDeclaration",
                      "scope": 137,
                      "src": "2249:44:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_questionAndAnswer_$8_memory_ptr",
                        "typeString": "struct Election.questionAndAnswer"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 122,
                        "name": "questionAndAnswer",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 8,
                        "src": "2249:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_questionAndAnswer_$8_storage_ptr",
                          "typeString": "struct Election.questionAndAnswer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 130,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "2314:24:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 125,
                          "name": "questionAndAnswerCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "2314:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 127,
                        "name": "q",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "2340:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "2343:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 124,
                      "name": "questionAndAnswer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "2296:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_questionAndAnswer_$8_storage_ptr_$",
                        "typeString": "type(struct Election.questionAndAnswer storage pointer)"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2296:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_questionAndAnswer_$8_memory",
                      "typeString": "struct Election.questionAndAnswer memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2249:96:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "questions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "2355:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_questionAndAnswer_$8_storage_$",
                          "typeString": "mapping(uint256 => struct Election.questionAndAnswer storage ref)"
                        }
                      },
                      "id": 133,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "questionAndAnswerCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "2365:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2355:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_questionAndAnswer_$8_storage",
                        "typeString": "struct Election.questionAndAnswer storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 134,
                      "name": "myQuestionAndAnswer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "2391:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_questionAndAnswer_$8_memory_ptr",
                        "typeString": "struct Election.questionAndAnswer memory"
                      }
                    },
                    "src": "2355:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_questionAndAnswer_$8_storage",
                      "typeString": "struct Election.questionAndAnswer storage ref"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "2355:55:0"
                }
              ]
            },
            "documentation": null,
            "id": 138,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "name": "q",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "2034:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2034:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 111,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "2051:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2051:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2033:28:0"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2068:0:0"
            },
            "scope": 197,
            "src": "2013:404:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "2512:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 142,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2492:2:0"
            },
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2512:0:0"
            },
            "scope": 197,
            "src": "2483:31:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "2606:998:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 145,
                      "name": "principle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "2616:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 146,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 269,
                        "src": "2628:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2628:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2616:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "2616:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "5768617420636f6e73656e73757320616c676f726974686d20646f657320426974636f696e207573653f",
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2660:44:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2aa541514c9562d487bba759fcad4b8604a395e75c77c218963d39625a5583f",
                          "typeString": "literal_string \"What consensus algorithm does Bitcoin use?\""
                        },
                        "value": "What consensus algorithm does Bitcoin use?"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "307837334230314539333633313131383135394234303539393833364242323330323243413741443030433132303344313839383443443938323635344537463430",
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2706:66:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_52327153696412143064691339353214193811145088758027772959553027920523026136896_by_1",
                          "typeString": "int_const 5232...(69 digits omitted)...6896"
                        },
                        "value": "0x73B01E93631118159B40599836BB23022CA7AD00C1203D18984CD982654E7F40"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c2aa541514c9562d487bba759fcad4b8604a395e75c77c218963d39625a5583f",
                          "typeString": "literal_string \"What consensus algorithm does Bitcoin use?\""
                        },
                        {
                          "typeIdentifier": "t_rational_52327153696412143064691339353214193811145088758027772959553027920523026136896_by_1",
                          "typeString": "int_const 5232...(69 digits omitted)...6896"
                        }
                      ],
                      "id": 150,
                      "name": "addQuestion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "2648:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,bytes32)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2648:125:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "2648:125:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f726d616c2063757272656e6369657320666f6c6c6f7720616e20696e666c6174696f6e617279207072696365206d6f64656c2c20426974636f696e20666f6c6c6f77732061205f5f5f207072696365206d6f64656c3f",
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2795:90:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4a3944ac0e765ccc9df2504dab366af1f0c22b969340277172b7c963557f3fa",
                          "typeString": "literal_string \"Normal currencies follow an inflationary price model, Bitcoin follows a ___ price model?\""
                        },
                        "value": "Normal currencies follow an inflationary price model, Bitcoin follows a ___ price model?"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "307830303639413135393842453345384133463445423133423842334142454234463632393334454543463231453036453442443744443045393534433846343336",
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2887:66:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_186632537130981776139621804794872745429281539469914714838415875394889118774_by_1",
                          "typeString": "int_const 1866...(67 digits omitted)...8774"
                        },
                        "value": "0x0069A1598BE3E8A3F4EB13B8B3ABEB4F62934EECF21E06E4BD7DD0E954C8F436"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e4a3944ac0e765ccc9df2504dab366af1f0c22b969340277172b7c963557f3fa",
                          "typeString": "literal_string \"Normal currencies follow an inflationary price model, Bitcoin follows a ___ price model?\""
                        },
                        {
                          "typeIdentifier": "t_rational_186632537130981776139621804794872745429281539469914714838415875394889118774_by_1",
                          "typeString": "int_const 1866...(67 digits omitted)...8774"
                        }
                      ],
                      "id": 155,
                      "name": "addQuestion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "2783:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,bytes32)"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2783:171:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "2783:171:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4120626c6f636b636861696e2074686174206973207374726963746c7920707269766174652c206973206a757374206120676c6f72696669656420776861743f",
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2976:66:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab4b24570c46d81b95b024e7897d7c6b828ca71f823888c7b342ce423f12c236",
                          "typeString": "literal_string \"A blockchain that is strictly private, is just a glorified what?\""
                        },
                        "value": "A blockchain that is strictly private, is just a glorified what?"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "307833353439423030323842373544393831434444413245353733453943423439444544433230303138353837364446323939463931324237394636394441424438",
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3044:66:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_24102775586605758183953934571450981167738178671680399674285773606264709688280_by_1",
                          "typeString": "int_const 2410...(69 digits omitted)...8280"
                        },
                        "value": "0x3549B0028B75D981CDDA2E573E9CB49DEDC200185876DF299F912B79F69DABD8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ab4b24570c46d81b95b024e7897d7c6b828ca71f823888c7b342ce423f12c236",
                          "typeString": "literal_string \"A blockchain that is strictly private, is just a glorified what?\""
                        },
                        {
                          "typeIdentifier": "t_rational_24102775586605758183953934571450981167738178671680399674285773606264709688280_by_1",
                          "typeString": "int_const 2410...(69 digits omitted)...8280"
                        }
                      ],
                      "id": 160,
                      "name": "addQuestion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "2964:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,bytes32)"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2964:147:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "2964:147:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "576861742069732074686520636f6c6c656374696f6e206f6620616c6c20457468657265756d206e6f64657320616c736f206b6e6f776e2061733f204120776f726c64205f5f5f3f",
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3133:74:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b3789638350784c03a4a127ce48339fe0c512e016e9b035b2e0760f3fc4f75e",
                          "typeString": "literal_string \"What is the collection of all Ethereum nodes also known as? A world ___?\""
                        },
                        "value": "What is the collection of all Ethereum nodes also known as? A world ___?"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "307841413937333032313530464345383131343235434438343533373032384135414642453337453346313336324144343541353144343637453137414644433943",
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3209:66:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_77160310347968731058825111807910145134323608738166313998820219539912970460316_by_1",
                          "typeString": "int_const 7716...(69 digits omitted)...0316"
                        },
                        "value": "0xAA97302150FCE811425CD84537028A5AFBE37E3F1362AD45A51D467E17AFDC9C"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1b3789638350784c03a4a127ce48339fe0c512e016e9b035b2e0760f3fc4f75e",
                          "typeString": "literal_string \"What is the collection of all Ethereum nodes also known as? A world ___?\""
                        },
                        {
                          "typeIdentifier": "t_rational_77160310347968731058825111807910145134323608738166313998820219539912970460316_by_1",
                          "typeString": "int_const 7716...(69 digits omitted)...0316"
                        }
                      ],
                      "id": 165,
                      "name": "addQuestion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "3121:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,bytes32)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3121:155:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "3121:155:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "576861742070726f6365737320697320696d706f737369626c6520746f20636f6e64756374206f6e2074686520426974636f696e20626c6f636b636861696e2c20646f75626c65205f5f5f3f",
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3298:78:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455b2a22192001d4a88266c80fcb9af20b0d44293b2b50856738333017253328",
                          "typeString": "literal_string \"What process is impossible to conduct on the Bitcoin blockchain, double ___?\""
                        },
                        "value": "What process is impossible to conduct on the Bitcoin blockchain, double ___?"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "307832363243443745384433313536423542393731313341333733433834443533323839444234353330453238354435433844423345393837344142433839314139",
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3378:66:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_17267119669416263377133369653995699762038234365557768231978391553314633847209_by_1",
                          "typeString": "int_const 1726...(69 digits omitted)...7209"
                        },
                        "value": "0x262CD7E8D3156B5B97113A373C84D53289DB4530E285D5C8DB3E9874ABC891A9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_455b2a22192001d4a88266c80fcb9af20b0d44293b2b50856738333017253328",
                          "typeString": "literal_string \"What process is impossible to conduct on the Bitcoin blockchain, double ___?\""
                        },
                        {
                          "typeIdentifier": "t_rational_17267119669416263377133369653995699762038234365557768231978391553314633847209_by_1",
                          "typeString": "int_const 1726...(69 digits omitted)...7209"
                        }
                      ],
                      "id": 170,
                      "name": "addQuestion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "3286:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,bytes32)"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3286:159:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "3286:159:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "576861742070617274206f6620612063727970746f63757272656e63792077616c6c6574206d75737420796f75206e65766572206578706f73653f",
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3467:61:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5db4fb05b2a8fe1a837feffc6fb93ad0e350ff3596d33fb4716ee1cca3649d9",
                          "typeString": "literal_string \"What part of a cryptocurrency wallet must you never expose?\""
                        },
                        "value": "What part of a cryptocurrency wallet must you never expose?"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "307844374344343832434239353845463233354635443236453835323437324241314545353330394541423138453343363731323138314137424641453830303030",
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3530:66:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_97609964225175823902223716815038673144807819805038136280200934158704705011712_by_1",
                          "typeString": "int_const 9760...(69 digits omitted)...1712"
                        },
                        "value": "0xD7CD482CB958EF235F5D26E852472BA1EE5309EAB18E3C6712181A7BFAE80000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f5db4fb05b2a8fe1a837feffc6fb93ad0e350ff3596d33fb4716ee1cca3649d9",
                          "typeString": "literal_string \"What part of a cryptocurrency wallet must you never expose?\""
                        },
                        {
                          "typeIdentifier": "t_rational_97609964225175823902223716815038673144807819805038136280200934158704705011712_by_1",
                          "typeString": "int_const 9760...(69 digits omitted)...1712"
                        }
                      ],
                      "id": 175,
                      "name": "addQuestion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "3455:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,bytes32)"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3455:142:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "3455:142:0"
                }
              ]
            },
            "documentation": null,
            "id": 181,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2596:2:0"
            },
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2606:0:0"
            },
            "scope": 197,
            "src": "2585:1019:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 195,
              "nodeType": "Block",
              "src": "3645:163:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 185,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "3676:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3676:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 187,
                          "name": "principle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "3690:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3676:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792043727970746f207072696e6369706c65206d61792064657374726f79207468652043727970746f205363686f6f6c2e",
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3713:54:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_428873cddee7b8e71560e9631673d6ae4e8ba08d5d92fe8435991ce4f973b1f9",
                          "typeString": "literal_string \"Only Crypto principle may destroy the Crypto School.\""
                        },
                        "value": "Only Crypto principle may destroy the Crypto School."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_428873cddee7b8e71560e9631673d6ae4e8ba08d5d92fe8435991ce4f973b1f9",
                          "typeString": "literal_string \"Only Crypto principle may destroy the Crypto School.\""
                        }
                      ],
                      "id": 184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        272,
                        273
                      ],
                      "referencedDeclaration": 273,
                      "src": "3655:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3655:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "3655:122:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 192,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 196,
                      "src": "3787:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3787:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "3787:14:0"
                }
              ]
            },
            "documentation": null,
            "id": 196,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "selfdestruct",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3635:2:0"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3645:0:0"
            },
            "scope": 197,
            "src": "3614:194:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 198,
        "src": "25:3785:0"
      }
    ],
    "src": "0:3810:0"
  },
  "legacyAST": {
    "absolutePath": "/home/paul/code/cryptocademy/election_react/contracts/Election.sol",
    "exportedSymbols": {
      "Election": [
        197
      ]
    },
    "id": 198,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 197,
        "linearizedBaseContracts": [
          197
        ],
        "name": "Election",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Election.questionAndAnswer",
            "id": 8,
            "members": [
              {
                "constant": false,
                "id": 3,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "89:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "89:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "name": "question",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "106:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "106:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "name": "answer",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "131:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 6,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "131:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "questionAndAnswer",
            "nodeType": "StructDefinition",
            "scope": 197,
            "src": "54:98:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10,
            "name": "questionAndAnswerCount",
            "nodeType": "VariableDeclaration",
            "scope": 197,
            "src": "199:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "199:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 14,
            "name": "questions",
            "nodeType": "VariableDeclaration",
            "scope": 197,
            "src": "291:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_questionAndAnswer_$8_storage_$",
              "typeString": "mapping(uint256 => struct Election.questionAndAnswer)"
            },
            "typeName": {
              "id": 13,
              "keyType": {
                "id": 11,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "300:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "291:35:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_questionAndAnswer_$8_storage_$",
                "typeString": "mapping(uint256 => struct Election.questionAndAnswer)"
              },
              "valueType": {
                "contractScope": null,
                "id": 12,
                "name": "questionAndAnswer",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 8,
                "src": "308:17:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_questionAndAnswer_$8_storage_ptr",
                  "typeString": "struct Election.questionAndAnswer"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 18,
            "name": "users",
            "nodeType": "VariableDeclaration",
            "scope": 197,
            "src": "406:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
              "typeString": "mapping(address => struct Election.User)"
            },
            "typeName": {
              "id": 17,
              "keyType": {
                "id": 15,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "415:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "406:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                "typeString": "mapping(address => struct Election.User)"
              },
              "valueType": {
                "contractScope": null,
                "id": 16,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 23,
                "src": "426:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$23_storage_ptr",
                  "typeString": "struct Election.User"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 20,
            "name": "principle",
            "nodeType": "VariableDeclaration",
            "scope": 197,
            "src": "534:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "534:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "Election.User",
            "id": 23,
            "members": [
              {
                "constant": false,
                "id": 22,
                "name": "student",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "593:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 21,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "593:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nodeType": "StructDefinition",
            "scope": 197,
            "src": "571:95:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 30,
              "nodeType": "Block",
              "src": "726:46:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 28,
                    "name": "questionAndAnswerCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10,
                    "src": "743:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 27,
                  "id": 29,
                  "nodeType": "Return",
                  "src": "736:29:0"
                }
              ]
            },
            "documentation": null,
            "id": 31,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getQuestionsCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "702:2:0"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "721:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "720:6:0"
            },
            "scope": 197,
            "src": "676:96:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 51,
              "nodeType": "Block",
              "src": "901:262:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 40,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 37,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "1015:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 38,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1015:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 39,
                          "name": "principle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "1029:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1015:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792043727970746f207072696e6369706c65206d6179206772616e742061207573657220612073747564656e742e",
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1052:51:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_418812ccf8ea672c6bc5f8dad45289a4dccdb05eac03be58e884ce4983292ff2",
                          "typeString": "literal_string \"Only Crypto principle may grant a user a student.\""
                        },
                        "value": "Only Crypto principle may grant a user a student."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_418812ccf8ea672c6bc5f8dad45289a4dccdb05eac03be58e884ce4983292ff2",
                          "typeString": "literal_string \"Only Crypto principle may grant a user a student.\""
                        }
                      ],
                      "id": 36,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        272,
                        273
                      ],
                      "referencedDeclaration": 273,
                      "src": "994:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "994:119:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "994:119:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 44,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "1132:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                            "typeString": "mapping(address => struct Election.User storage ref)"
                          }
                        },
                        "id": 46,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 45,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "1138:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1132:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$23_storage",
                          "typeString": "struct Election.User storage ref"
                        }
                      },
                      "id": 47,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "student",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "1132:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1152:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1132:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "1132:24:0"
                }
              ]
            },
            "documentation": null,
            "id": 52,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "grantStudent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "882:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "882:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "881:12:0"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "901:0:0"
            },
            "scope": 197,
            "src": "860:303:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "1235:728:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 60,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "1323:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1323:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 62,
                          "name": "principle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "1337:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1323:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5072696e6369706c65206973206e6f7420616c6c6f77656420746f20616e73776572207175657374696f6e732c207468657927726520657870657274732e",
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1360:64:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7cec965cea7c424309fbd0b2b3b7db5a2e67a549e9d27d545dbc3abb9964c207",
                          "typeString": "literal_string \"Principle is not allowed to answer questions, they're experts.\""
                        },
                        "value": "Principle is not allowed to answer questions, they're experts."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7cec965cea7c424309fbd0b2b3b7db5a2e67a549e9d27d545dbc3abb9964c207",
                          "typeString": "literal_string \"Principle is not allowed to answer questions, they're experts.\""
                        }
                      ],
                      "id": 59,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        272,
                        273
                      ],
                      "referencedDeclaration": 273,
                      "src": "1302:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1302:136:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1302:136:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 68,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "1534:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                              "typeString": "mapping(address => struct Election.User storage ref)"
                            }
                          },
                          "id": 71,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 69,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 269,
                              "src": "1540:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 70,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1540:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1534:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$23_storage",
                            "typeString": "struct Election.User storage ref"
                          }
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "student",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22,
                        "src": "1534:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f74686572207573657273206d6179206e6f7420616e73776572207175657374696f6e732c2074686579206172652070726f6261626c7920657870657274732e",
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1573:66:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_919e5d7b7225745c62f1ca55cc5255c4251a8d21012307b2939373d4fb0716dd",
                          "typeString": "literal_string \"Other users may not answer questions, they are probably experts.\""
                        },
                        "value": "Other users may not answer questions, they are probably experts."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_919e5d7b7225745c62f1ca55cc5255c4251a8d21012307b2939373d4fb0716dd",
                          "typeString": "literal_string \"Other users may not answer questions, they are probably experts.\""
                        }
                      ],
                      "id": 67,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        272,
                        273
                      ],
                      "referencedDeclaration": 273,
                      "src": "1513:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1513:136:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "1513:136:0"
                },
                {
                  "assignments": [
                    77
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77,
                      "name": "myQuestionAndAnswer",
                      "nodeType": "VariableDeclaration",
                      "scope": 106,
                      "src": "1668:44:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_questionAndAnswer_$8_memory_ptr",
                        "typeString": "struct Election.questionAndAnswer"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 76,
                        "name": "questionAndAnswer",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 8,
                        "src": "1668:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_questionAndAnswer_$8_storage_ptr",
                          "typeString": "struct Election.questionAndAnswer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 81,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 78,
                      "name": "questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1715:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_questionAndAnswer_$8_storage_$",
                        "typeString": "mapping(uint256 => struct Election.questionAndAnswer storage ref)"
                      }
                    },
                    "id": 80,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "1725:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1715:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_questionAndAnswer_$8_storage",
                      "typeString": "struct Election.questionAndAnswer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1668:60:0"
                },
                {
                  "assignments": [
                    83
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83,
                      "name": "studentsAnswer",
                      "nodeType": "VariableDeclaration",
                      "scope": 106,
                      "src": "1747:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 82,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1747:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 87,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 85,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1779:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 84,
                      "name": "sha256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "1772:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1772:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1747:39:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 88,
                          "name": "studentsAnswer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83,
                          "src": "1809:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 89,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1808:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 90,
                            "name": "myQuestionAndAnswer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "1829:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_questionAndAnswer_$8_memory_ptr",
                              "typeString": "struct Election.questionAndAnswer memory"
                            }
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "answer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "1829:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 92,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1828:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1808:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 104,
                    "nodeType": "Block",
                    "src": "1926:31:0",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 58,
                        "id": 103,
                        "nodeType": "Return",
                        "src": "1940:7:0"
                      }
                    ]
                  },
                  "id": 105,
                  "nodeType": "IfStatement",
                  "src": "1805:152:0",
                  "trueBody": {
                    "id": 102,
                    "nodeType": "Block",
                    "src": "1857:65:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31303030303030303030303030303030303030",
                              "id": 99,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1891:19:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1000000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 94,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 269,
                                "src": "1871:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 97,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1871:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 98,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1871:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1871:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 101,
                        "nodeType": "ExpressionStatement",
                        "src": "1871:40:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "answerQ",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "name": "answer",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "1198:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "1219:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1197:30:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1235:0:0"
            },
            "scope": 197,
            "src": "1181:782:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "2068:349:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 115,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "2150:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2150:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 117,
                          "name": "principle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "2164:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2150:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792043727970746f207072696e6369706c65206d617920616464207175657374696f6e732e",
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2187:42:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4baf7e441f4c854651ef6a7e20b36e69f5137f34c46927afa05aec090648c2cb",
                          "typeString": "literal_string \"Only Crypto principle may add questions.\""
                        },
                        "value": "Only Crypto principle may add questions."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4baf7e441f4c854651ef6a7e20b36e69f5137f34c46927afa05aec090648c2cb",
                          "typeString": "literal_string \"Only Crypto principle may add questions.\""
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        272,
                        273
                      ],
                      "referencedDeclaration": 273,
                      "src": "2129:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2129:110:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "2129:110:0"
                },
                {
                  "assignments": [
                    123
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 123,
                      "name": "myQuestionAndAnswer",
                      "nodeType": "VariableDeclaration",
                      "scope": 137,
                      "src": "2249:44:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_questionAndAnswer_$8_memory_ptr",
                        "typeString": "struct Election.questionAndAnswer"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 122,
                        "name": "questionAndAnswer",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 8,
                        "src": "2249:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_questionAndAnswer_$8_storage_ptr",
                          "typeString": "struct Election.questionAndAnswer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 130,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "2314:24:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 125,
                          "name": "questionAndAnswerCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "2314:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 127,
                        "name": "q",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "2340:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "2343:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 124,
                      "name": "questionAndAnswer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "2296:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_questionAndAnswer_$8_storage_ptr_$",
                        "typeString": "type(struct Election.questionAndAnswer storage pointer)"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2296:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_questionAndAnswer_$8_memory",
                      "typeString": "struct Election.questionAndAnswer memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2249:96:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "questions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "2355:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_questionAndAnswer_$8_storage_$",
                          "typeString": "mapping(uint256 => struct Election.questionAndAnswer storage ref)"
                        }
                      },
                      "id": 133,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "questionAndAnswerCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "2365:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2355:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_questionAndAnswer_$8_storage",
                        "typeString": "struct Election.questionAndAnswer storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 134,
                      "name": "myQuestionAndAnswer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "2391:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_questionAndAnswer_$8_memory_ptr",
                        "typeString": "struct Election.questionAndAnswer memory"
                      }
                    },
                    "src": "2355:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_questionAndAnswer_$8_storage",
                      "typeString": "struct Election.questionAndAnswer storage ref"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "2355:55:0"
                }
              ]
            },
            "documentation": null,
            "id": 138,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "name": "q",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "2034:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2034:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 111,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "2051:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2051:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2033:28:0"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2068:0:0"
            },
            "scope": 197,
            "src": "2013:404:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "2512:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 142,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2492:2:0"
            },
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2512:0:0"
            },
            "scope": 197,
            "src": "2483:31:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "2606:998:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 145,
                      "name": "principle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "2616:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 146,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 269,
                        "src": "2628:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2628:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2616:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "2616:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "5768617420636f6e73656e73757320616c676f726974686d20646f657320426974636f696e207573653f",
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2660:44:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2aa541514c9562d487bba759fcad4b8604a395e75c77c218963d39625a5583f",
                          "typeString": "literal_string \"What consensus algorithm does Bitcoin use?\""
                        },
                        "value": "What consensus algorithm does Bitcoin use?"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "307837334230314539333633313131383135394234303539393833364242323330323243413741443030433132303344313839383443443938323635344537463430",
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2706:66:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_52327153696412143064691339353214193811145088758027772959553027920523026136896_by_1",
                          "typeString": "int_const 5232...(69 digits omitted)...6896"
                        },
                        "value": "0x73B01E93631118159B40599836BB23022CA7AD00C1203D18984CD982654E7F40"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c2aa541514c9562d487bba759fcad4b8604a395e75c77c218963d39625a5583f",
                          "typeString": "literal_string \"What consensus algorithm does Bitcoin use?\""
                        },
                        {
                          "typeIdentifier": "t_rational_52327153696412143064691339353214193811145088758027772959553027920523026136896_by_1",
                          "typeString": "int_const 5232...(69 digits omitted)...6896"
                        }
                      ],
                      "id": 150,
                      "name": "addQuestion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "2648:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,bytes32)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2648:125:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "2648:125:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f726d616c2063757272656e6369657320666f6c6c6f7720616e20696e666c6174696f6e617279207072696365206d6f64656c2c20426974636f696e20666f6c6c6f77732061205f5f5f207072696365206d6f64656c3f",
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2795:90:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4a3944ac0e765ccc9df2504dab366af1f0c22b969340277172b7c963557f3fa",
                          "typeString": "literal_string \"Normal currencies follow an inflationary price model, Bitcoin follows a ___ price model?\""
                        },
                        "value": "Normal currencies follow an inflationary price model, Bitcoin follows a ___ price model?"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "307830303639413135393842453345384133463445423133423842334142454234463632393334454543463231453036453442443744443045393534433846343336",
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2887:66:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_186632537130981776139621804794872745429281539469914714838415875394889118774_by_1",
                          "typeString": "int_const 1866...(67 digits omitted)...8774"
                        },
                        "value": "0x0069A1598BE3E8A3F4EB13B8B3ABEB4F62934EECF21E06E4BD7DD0E954C8F436"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e4a3944ac0e765ccc9df2504dab366af1f0c22b969340277172b7c963557f3fa",
                          "typeString": "literal_string \"Normal currencies follow an inflationary price model, Bitcoin follows a ___ price model?\""
                        },
                        {
                          "typeIdentifier": "t_rational_186632537130981776139621804794872745429281539469914714838415875394889118774_by_1",
                          "typeString": "int_const 1866...(67 digits omitted)...8774"
                        }
                      ],
                      "id": 155,
                      "name": "addQuestion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "2783:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,bytes32)"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2783:171:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "2783:171:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4120626c6f636b636861696e2074686174206973207374726963746c7920707269766174652c206973206a757374206120676c6f72696669656420776861743f",
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2976:66:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab4b24570c46d81b95b024e7897d7c6b828ca71f823888c7b342ce423f12c236",
                          "typeString": "literal_string \"A blockchain that is strictly private, is just a glorified what?\""
                        },
                        "value": "A blockchain that is strictly private, is just a glorified what?"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "307833353439423030323842373544393831434444413245353733453943423439444544433230303138353837364446323939463931324237394636394441424438",
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3044:66:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_24102775586605758183953934571450981167738178671680399674285773606264709688280_by_1",
                          "typeString": "int_const 2410...(69 digits omitted)...8280"
                        },
                        "value": "0x3549B0028B75D981CDDA2E573E9CB49DEDC200185876DF299F912B79F69DABD8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ab4b24570c46d81b95b024e7897d7c6b828ca71f823888c7b342ce423f12c236",
                          "typeString": "literal_string \"A blockchain that is strictly private, is just a glorified what?\""
                        },
                        {
                          "typeIdentifier": "t_rational_24102775586605758183953934571450981167738178671680399674285773606264709688280_by_1",
                          "typeString": "int_const 2410...(69 digits omitted)...8280"
                        }
                      ],
                      "id": 160,
                      "name": "addQuestion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "2964:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,bytes32)"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2964:147:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "2964:147:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "576861742069732074686520636f6c6c656374696f6e206f6620616c6c20457468657265756d206e6f64657320616c736f206b6e6f776e2061733f204120776f726c64205f5f5f3f",
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3133:74:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b3789638350784c03a4a127ce48339fe0c512e016e9b035b2e0760f3fc4f75e",
                          "typeString": "literal_string \"What is the collection of all Ethereum nodes also known as? A world ___?\""
                        },
                        "value": "What is the collection of all Ethereum nodes also known as? A world ___?"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "307841413937333032313530464345383131343235434438343533373032384135414642453337453346313336324144343541353144343637453137414644433943",
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3209:66:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_77160310347968731058825111807910145134323608738166313998820219539912970460316_by_1",
                          "typeString": "int_const 7716...(69 digits omitted)...0316"
                        },
                        "value": "0xAA97302150FCE811425CD84537028A5AFBE37E3F1362AD45A51D467E17AFDC9C"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1b3789638350784c03a4a127ce48339fe0c512e016e9b035b2e0760f3fc4f75e",
                          "typeString": "literal_string \"What is the collection of all Ethereum nodes also known as? A world ___?\""
                        },
                        {
                          "typeIdentifier": "t_rational_77160310347968731058825111807910145134323608738166313998820219539912970460316_by_1",
                          "typeString": "int_const 7716...(69 digits omitted)...0316"
                        }
                      ],
                      "id": 165,
                      "name": "addQuestion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "3121:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,bytes32)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3121:155:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "3121:155:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "576861742070726f6365737320697320696d706f737369626c6520746f20636f6e64756374206f6e2074686520426974636f696e20626c6f636b636861696e2c20646f75626c65205f5f5f3f",
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3298:78:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455b2a22192001d4a88266c80fcb9af20b0d44293b2b50856738333017253328",
                          "typeString": "literal_string \"What process is impossible to conduct on the Bitcoin blockchain, double ___?\""
                        },
                        "value": "What process is impossible to conduct on the Bitcoin blockchain, double ___?"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "307832363243443745384433313536423542393731313341333733433834443533323839444234353330453238354435433844423345393837344142433839314139",
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3378:66:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_17267119669416263377133369653995699762038234365557768231978391553314633847209_by_1",
                          "typeString": "int_const 1726...(69 digits omitted)...7209"
                        },
                        "value": "0x262CD7E8D3156B5B97113A373C84D53289DB4530E285D5C8DB3E9874ABC891A9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_455b2a22192001d4a88266c80fcb9af20b0d44293b2b50856738333017253328",
                          "typeString": "literal_string \"What process is impossible to conduct on the Bitcoin blockchain, double ___?\""
                        },
                        {
                          "typeIdentifier": "t_rational_17267119669416263377133369653995699762038234365557768231978391553314633847209_by_1",
                          "typeString": "int_const 1726...(69 digits omitted)...7209"
                        }
                      ],
                      "id": 170,
                      "name": "addQuestion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "3286:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,bytes32)"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3286:159:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "3286:159:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "576861742070617274206f6620612063727970746f63757272656e63792077616c6c6574206d75737420796f75206e65766572206578706f73653f",
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3467:61:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5db4fb05b2a8fe1a837feffc6fb93ad0e350ff3596d33fb4716ee1cca3649d9",
                          "typeString": "literal_string \"What part of a cryptocurrency wallet must you never expose?\""
                        },
                        "value": "What part of a cryptocurrency wallet must you never expose?"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "307844374344343832434239353845463233354635443236453835323437324241314545353330394541423138453343363731323138314137424641453830303030",
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3530:66:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_97609964225175823902223716815038673144807819805038136280200934158704705011712_by_1",
                          "typeString": "int_const 9760...(69 digits omitted)...1712"
                        },
                        "value": "0xD7CD482CB958EF235F5D26E852472BA1EE5309EAB18E3C6712181A7BFAE80000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f5db4fb05b2a8fe1a837feffc6fb93ad0e350ff3596d33fb4716ee1cca3649d9",
                          "typeString": "literal_string \"What part of a cryptocurrency wallet must you never expose?\""
                        },
                        {
                          "typeIdentifier": "t_rational_97609964225175823902223716815038673144807819805038136280200934158704705011712_by_1",
                          "typeString": "int_const 9760...(69 digits omitted)...1712"
                        }
                      ],
                      "id": 175,
                      "name": "addQuestion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "3455:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,bytes32)"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3455:142:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "3455:142:0"
                }
              ]
            },
            "documentation": null,
            "id": 181,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2596:2:0"
            },
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2606:0:0"
            },
            "scope": 197,
            "src": "2585:1019:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 195,
              "nodeType": "Block",
              "src": "3645:163:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 185,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "3676:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3676:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 187,
                          "name": "principle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "3690:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3676:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792043727970746f207072696e6369706c65206d61792064657374726f79207468652043727970746f205363686f6f6c2e",
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3713:54:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_428873cddee7b8e71560e9631673d6ae4e8ba08d5d92fe8435991ce4f973b1f9",
                          "typeString": "literal_string \"Only Crypto principle may destroy the Crypto School.\""
                        },
                        "value": "Only Crypto principle may destroy the Crypto School."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_428873cddee7b8e71560e9631673d6ae4e8ba08d5d92fe8435991ce4f973b1f9",
                          "typeString": "literal_string \"Only Crypto principle may destroy the Crypto School.\""
                        }
                      ],
                      "id": 184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        272,
                        273
                      ],
                      "referencedDeclaration": 273,
                      "src": "3655:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3655:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "3655:122:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 192,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 196,
                      "src": "3787:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3787:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "3787:14:0"
                }
              ]
            },
            "documentation": null,
            "id": 196,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "selfdestruct",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3635:2:0"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3645:0:0"
            },
            "scope": 197,
            "src": "3614:194:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 198,
        "src": "25:3785:0"
      }
    ],
    "src": "0:3810:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x7611Cb24062BfF3f0fC7bcABD5Aea1Ab9528c24E",
      "transactionHash": "0x5680d92983515dee140ebd5cd8583a8554123f8de9f5c5c051ced58422475ab1"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-01-18T08:31:34.927Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}